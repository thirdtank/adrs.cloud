FROM ruby:3.3

SHELL [ "/bin/bash", "-o", "pipefail", "-c" ]

ENV DEBIAN_FRONTEND noninteractive
# These packages are needed to set up other repos to install other
# packages and/or are useful in installing other software
RUN apt-get -y update && \
    apt-get install --quiet --yes ca-certificates curl gnupg

# Install Docker itself. Note that this is installed only what is needed to run
# the Docker CLI - the docker-compose.dx.yml will connect this docker's socket
# to the one on the host. This is only to run stuff like docker build and docker push.
# It's NOT intended to run docker containers inside this one.
RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg  && \
    echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update --quiet --yes && \
    apt-get install --quiet --yes docker-ce \
                       docker-ce-cli \
                       containerd.io \
                       docker-buildx-plugin \
                       docker-compose-plugin


RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs

RUN apt-get -y install lsb-release && \
    sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    apt-get -y install postgresql-client-16

RUN echo "gem: --no-document" >> ~/.gemrc && \
    gem update --system && \
    gem install bundler

ENV EDITOR=vim
RUN apt-get install -y vim && \
    echo "set -o vi" >> /root/.bashrc

COPY dx/show-help-in-app-container-then-wait.sh /root
