@import "melange-css/melange.css";
@import "textarea.css";
/** Buttons appear to be above the screen, pressable into it */
.button {
  border-style: solid;
  border-width: 1px;
  border-radius: var(--mg-bw-3);
  box-shadow: calc(0.25 * var(--mg-sp-1))
              calc(0.25 * var(--mg-sp-1))
              calc(0.5 * var(--mg-sp-1))
              0;
  z-index: 2;
  cursor: pointer;
}

/** When pressed or disabled, they are at the same level as the screen */
.button:active, .button:disabled {
  /* Make it appear to "press in" to the screen */
  transform: translateX(calc(0.25 * var(--mg-sp-1)))
             translateY(calc(0.25 * var(--mg-sp-1)));
  /* Remove the shadow since it's no longer above the screen */
  box-shadow: none;
  /* Button bar styles remove some borders, but if it's pressed into the screen, it should
   * have its borders back
   */
  z-index: 1;
}

/** When disabled, gray it out, as well as the SVGs that are in there */
.button:disabled {
  cursor: not-allowed;
}
.button:disabled,
.button:disabled svg path {
  filter: grayscale(80%); 
  color: var(--mg-gray-300);
}
/** Sizing */
.button.button--size--normal {
  padding: var(--mg-sp-3);
  font-size: var(--mg-fs-3);
}

.button.button--size--small {
  padding-left: var(--mg-sp-3);
  padding-right: var(--mg-sp-3);
  padding-top: var(--mg-sp-2);
  padding-bottom: var(--mg-sp-2);
  font-size: var(--mg-fs-2);
}

.button.button--size--tiny {
  padding-left: var(--mg-sp-2);
  padding-right: var(--mg-sp-2);
  padding-top: var(--mg-sp-1);
  padding-bottom: var(--mg-sp-1);
  font-size: var(--mg-fs-1);
}
/** Colors */
.button.button--color--red {
  background-color: var(--mg-red-800);
  border-color: var(--mg-red-700);
  color: var(--mg-red-200);
}
.button.button--color--orange {
  background-color: var(--mg-orange-800);
  border-color: var(--mg-orange-700);
  color: var(--mg-orange-200);
}
.button.button--color--yellow {
  background-color: var(--mg-yellow-800);
  border-color: var(--mg-yellow-700);
  color: var(--mg-yellow-200);
}
.button.button--color--green {
  background-color: var(--mg-green-800);
  border-color: var(--mg-green-700);
  color: var(--mg-green-200);
}
.button.button--color--blue {
  background-color: var(--mg-blue-800);
  border-color: var(--mg-blue-700);
  color: var(--mg-blue-200);
}
.button.button--color--purple {
  background-color: var(--mg-purple-800);
  border-color: var(--mg-purple-700);
  color: var(--mg-purple-200);
}
.button.button--color--gray {
  background-color: var(--mg-gray-800);
  border-color: var(--mg-gray-700);
  color: var(--mg-gray-200);
}
.text-field {
  box-shadow: inset 0 0 calc(1.25 * var(--mg-sp-1)) calc(0.25 * var(--mg-sp-1)) var(--mg-gray-400);
  border-style: solid;
  border-width: thin;
  border-color: var(--mg-gray-400);
  border-radius: var(--mg-bw-2);
  font-size: var(--mg-fs-3);
  padding: var(--mg-sp-3);
  background-color: white;
}

.text-field::placeholder {
  font-size: var(--mg-fs-2);
  font-weight: 300;
}

.text-field:hover {
  border-color: var(--mg-purple-600);
}
.text-field:focus {
  outline-color: var(--mg-purple-600);
  outline-style: solid;
  outline-width: 2px;
  box-shadow: inset 0 0 calc(1.25 * var(--mg-sp-1)) calc(0.25 * var(--mg-sp-1)) var(--mg-gray-300);
}

.text-field-label {
  font-weight: 300;
  padding-top: calc(0.25 * var(--mg-sp-2));
  padding-bottom: calc(1.75 * var(--mg-sp-2));
  font-size: var(--mg-fs-2);
}
.field-has-error .text-field-label,
.text-field-label.text-field-label--hidden {
  display: none;
}

.text-field-error-label {
  color: var(--mg-red-300);
  background-color: var(--mg-red-700);
  border-top-right-radius: 999px;
  border-bottom-right-radius: 999px;
  align-items: center;
  gap: var(--mg-sp-2);
  font-weight: 500;
  font-size: var(--mg-fs-2);
  padding: var(--mg-sp-2);
  display: none;
}
.field-has-error .text-field-error-label {
  display: flex;
}


