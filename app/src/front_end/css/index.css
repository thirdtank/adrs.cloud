@import "brut-css/dist/brut.css";
@import "textarea.css";
@import "button.css";
@import "svgs.css";
@import "pages/HomePage.css";

@font-face {
  font-family: "Monaspace Xenon";
  src: url("../fonts/monaspace-xenon.ttf") format("truetype");
  font-display: swap;
}

[hidden] {
  display: none;
}

:root {
  --ff-cursive: 'Segoe Print', 'Bradley Hand', Chilanka, casual, cursive;
  --ff-mono: 'Monaspace Xenon', monospace;
}

code {
  font-family: var(--ff-mono);
}

:root {
  --green-100: #002602;
  --green-200: #004104;
  --green-300: #008108;
  --green-400: #00DA0D;
  --green-500: #27ff34;
  --green-600: #80FF87;
  --green-700: #C0FFC4;
  --green-800: #ECFFED;
  --green-900: #FBFFFB;
}

.w-quarter {
  width: 25%;
}

.text-glow {
  text-shadow: currentColor 0px 0px 8px;
}
@media (prefers-contrast: more) {
  .text-glow {
    text-shadow: none;
  }
}

.bg-none {
  background-color: transparent;
}

.bg-50 {
  background-color: rgba(255, 255, 255, 0.5);
}

.active-bg-gray-300:active {
  background-color: var(--gray-300);
}

.cursor-not-allowed {
  cursor: not-allowed;
}

dl.dl-grid {
  display: grid;
  grid-template-columns: max-content 1fr;
}

::backdrop {
  background-color: black;
  opacity: 0.5;
}

.rendered-markdown p {
  line-height: var(--lh-copy);
  max-width: var(--tw-wide);
}
.rendered-markdown p:first-child {
  margin-top: 0;
}

.bg-red-600-a20 {
  background-color: rgb(from var(--red-600) r g b / 20%);
}

.rotating {
  animation: rotation 2s linear infinite;
}

@keyframes rotation {
  100% {
    transform: rotate(360deg);
  }
}
/* Text fields */

.text-field {
  /* Text fields appear sunken into the page */
  box-shadow: inset 0 0 calc(1.25 * var(--sp-1)) calc(0.25 * var(--sp-1)) var(--gray-400);
  border-style: solid;
  border-width: thin;
  border-color: var(--gray-400);
  border-radius: var(--bw-2);
  font-size: var(--fs-3);
  padding: var(--sp-3);
  background-color: white;
}

.text-field--small {
  font-size: var(--fs-2);
  padding: var(--sp-2);
}

.text-field--tiny {
  font-size: var(--fs-1);
  padding: var(--sp-2);
}

.text-field::placeholder {
  /** Placeholder text should be obviously different, so make it smaller size */
  font-size: var(--fs-2);
  font-weight: 300;
}

.text-field:hover {
  /* Subtle purple on hover */
  border-color: var(--purple-600);
}

.text-field:focus {
  /* More obvious purple on focus */
  outline-color: var(--purple-600);
  outline-style: solid;
  outline-width: 2px;
  box-shadow: inset 0 0 calc(1.25 * var(--sp-1)) calc(0.25 * var(--sp-1)) var(--gray-300);
}

.text-field--tiny:focus {
  outline-width: 1px;
}

.text-field-label {
  /** Label needs to be closer to the field, but not too close.
      This should split it properly, but still fit into the grid */
  padding-top: calc(0.25 * var(--sp-2));
  padding-bottom: calc(1.75 * var(--sp-2));
}

.checkbox-label, .text-field-label {
  font-weight: 600;
  font-size: var(--fs-2);
}

.text-field-label--small {
  font-size: var(--fs-1);
}

brut-cv {
  display: none;
}
brut-form[submitted-invalid] brut-cv,
brut-cv[server-generated] {
  display: block;
}
brut-form[submitted-invalid] brut-cv-messages:has(brut-cv),
brut-cv-messages:has(brut-cv[server-generated]) {
  color: var(--red-300);
  background-color: var(--red-700);
  border-top-right-radius: 999px;
  border-bottom-right-radius: 999px;
  align-items: center;
  font-weight: 500;
  font-size: var(--fs-2);
  padding: var(--sp-2);
  display: flex;
}

/* data-invalid is generated by the server, so that can be used
 * to reliably know that the field in invalid.
 *
 * The :invalid pseudoclass, however, is set no matter what, so
 * that is further qualified with the data-submitted attribute that
 * will be set by the form
 */
.foo {
.text-field-error-label {
  display: none;
}
input[data-invalid]                           ~ .text-field-label,
brut-form[submitted-invalid] input:invalid    ~ .text-field-label,
.textarea-container[data-invalid]             ~ .text-field-label,
textarea[data-invalid]                        ~ .text-field-label,
brut-form[submitted-invalid] textarea:invalid ~ .text-field-label {
  display:none;
}

input[data-invalid] ~ .text-field-error-label,
brut-form[submitted-invalid] input:invalid ~ .text-field-error-label,
textarea[data-invalid] ~ .text-field-error-label,
.textarea-container[data-invalid] ~ .text-field-error-label,
brut-form[submitted-invalid] textarea:invalid ~ .text-field-error-label {
  color: var(--red-300);
  background-color: var(--red-700);
  border-top-right-radius: 999px;
  border-bottom-right-radius: 999px;
  align-items: center;
  font-weight: 500;
  font-size: var(--fs-2);
  padding: var(--sp-2);
  display: flex;
}
}

brut-ajax-submit[requesting] button,
brut-ajax-submit[submitted] button {
  animation-duration: 125ms;
  animation-name: fade-out;
  animation-fill-mode: forwards;
  animation-timing-function: ease-out;
}
brut-ajax-submit [data-loading-animation],
brut-ajax-submit [data-submitted-icon] {
  /*display: none;*/
}

brut-ajax-submit [data-loading-animation],
brut-ajax-submit [data-submitted-icon] {
  animation-duration: 125ms;
  animation-name: fade-out;
  animation-fill-mode: forwards;
  animation-timing-function: ease-out;
}
brut-ajax-submit[requesting] [data-loading-animation] {
  animation-composition: accumulate;
  animation-duration: 125ms;
  animation-name: fade-in;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in;
}
brut-ajax-submit[submitted] [data-submitted-icon] {
  animation-duration: 125ms;
  animation-name: fade-in;
  animation-fill-mode: forwards;
  animation-timing-function: ease-in;
}

@keyframes fade-out {
  100% {
    opacity: 0;
    visibility: hidden;
  }
}
@keyframes fade-in {
  100% {
    opacity: 100%;
    visibility: visible;
  }
}

brut-cv ~ brut-cv::before {
  content: ", ";
}

table.striped tbody tr:nth-child(even) {
  background-color: var(--gray-800);
}

brut-tabs.adr-page-tabs {
  display: flex;
  flex-direction: column;
  gap: var(--sp-2);
  padding-left: var(--sp-3);
}

brut-tabs.adr-page-tabs [role=tab] {
  cursor: pointer;
  height: calc(2.5 * var(--sp-3));
  display: flex;
  flex-direction: column;
  justify-content: center;
  text-decoration: none;
  padding: var(--sp-2);
  padding-left: var(--sp-3);
  padding-right: var(--sp-3);
  border-bottom-left-radius: var(--bw-4);
  border-top-left-radius: var(--bw-4);
  color: var(--gray-800);
  background-color: transparent;
  text-align: right;
}
brut-tabs.adr-page-tabs [role=tab] * {
  pointer-events: none;
}
brut-tabs.adr-page-tabs [role=tab]:hover {
  color: var(--gray-700);
  background-color: var(--gray-300);
}

brut-tabs.adr-page-tabs [role=tab][aria-selected=true],
brut-tabs.adr-page-tabs [role=tab][aria-selected=true]:hover {
  color: var(--gray-100);
  background-color: var(--gray-900);
}

