#!/usr/bin/env ruby

def setup
  log "Installing gems"
  # Only do bundle install if the much-faster
  # bundle check indicates we need to
  system! "bundle check --no-color || bundle install --no-color --quiet"

  log "Installing Node Modules"
  system! "npm --no-color --no-progress install"

  log "Ensuring tmp dir exists"
  system! "mkdir -p tmp"

  log "All set up."
  log ""
  help
end

def help
  log "Useful commands:"
  log ""
  log "  bin/run"
  log "     # run app locally"
  log ""
  log "  bin/ci"
  log "     # runs all tests and checks as CI would"
  log ""
  log "  bin/setup help"
  log "     # show this help"
  log ""
end

# start of helpers

# We don't want the setup method to have to do all this error
# checking, and we also want to explicitly log what we are
# executing. Thus, we use this method instead of Kernel#system
def system!(*args)
  log "Executing #{args}"
  if system(*args)
    log "#{args} succeeded"
  else
    log "#{args} failed"
    abort
  end
end

# It's helpful to know what messages came from this
# script, so we'll use log instead of `puts`
def log(message)
  puts "[ bin/setup ] #{message}"
end

# end of helpers

if ARGV[0] == "help"
  help
else
  setup
end
