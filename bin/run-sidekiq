#!/usr/bin/env bash

set -e 
SCRIPT_DIR=$( cd -- "$( dirname -- "${0}" )" > /dev/null 2>&1 && pwd )

PIDFILE="${SCRIPT_DIR}/../tmp/pidfile.sidekiq"

if [ -f "${PIDFILE}" ]; then
  echo "[ $0 ] pidfile found"
  pid=$(cat "${PIDFILE}")
  if ps -p "${pid}" > /dev/null; then
    echo "[ $0 ] Attempting to kill PID '${pid}'"
    kill "${pid}"
  else
    echo "[ $0 ] PID '${pid}' no longer running"
  fi
  if timeout 5 tail --pid="${pid}" -f /dev/null; then
    echo "[ $0 ] PID '${pid}' stopped. Restarting server"
  else
    echo "[ $0 ] PID '${pid}' has not stopped. Trying kill -9"
    kill -9 "${pid}"
    if timeout 1 tail --pid="${pid}" -f /dev/null; then
      echo "[ $0 ] PID '${pid}' killed. Restarting server"
    else
      echo "[ $0 ] PID '${pid}' still running. Something seriously wrong"
    fi
    exit 1
  fi

else
  echo "[ $0 ] No pidfile-Starting up"
fi

RACK_ENV="${RACK_ENV:-development}"

export RACK_ENV

dotenv -f "${SCRIPT_DIR}/../.env.test,${SCRIPT_DIR}/../.env.test.local" --ignore -- bin/sidekiq --config "${SCRIPT_DIR}/../app/config/sidekiq.yml"  --require "${SCRIPT_DIR}/../app/boot_sidekiq.rb" --verbose &
echo $! > "${PIDFILE}"
wait
